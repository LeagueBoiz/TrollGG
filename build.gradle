plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
test {
    useJUnitPlatform()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //api 값을 받기 위한 라이브러리
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'

    //assertJ
    testImplementation("org.assertj:assertj-core:3.23.1")
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
//    implementation 'org.springdoc:springdoc-openapi-security:1.6.8'
}

tasks.named('test') {
    useJUnitPlatform()
}

//plain 파일 생성하지 않는 설정
jar{
    enabled= false
}
