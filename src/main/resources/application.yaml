spring:
  profiles:
    active:
    default: local
  h2:
    console:
      enabled: true  # H2 Console을 사용할지 여부 (H2 Cobnsole은 H2 Dataase를 UI로 제공해주는 기능)
      path: /h2-console  # H2 Console의 Path
  # Database Setting Info (Database를 H2로 사용하기 위해 H2연결 정보 입력)
  datasource:
    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
    url: jdbc:h2:~/test  # H2 접속 정보
    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력) ''

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: create # 실행할때 마다 테이블을 새로 만들겠다는 뜻! 최초에만 create => 후엔 update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false #AUTO_INCREAMENT #FALSE => jpa가 제공하는 기본넘버링 사용x
    show-sql: true
    properties:
      hibernate.format_sql: true

riot:
  api:
    key: ENC(mICQ0jITfFdZ1PNd2wxGtkWVslzkmROg5tFEPiKD6fxam9IJsYGLqgRmm00Wljz4CZXo1Cw316g=)
    ##riot key 입력

server:
  port: 8080

jasypt:
  encryptor:
    bean: jasyptStringEncryptor



---

spring:
  profiles:
    group:
      "local":
        -local-db
        -common
      "dev":
        -dev
        -local-db
      "prod":
        -prod
        -local-db
---

spring:
  config:
    activate:
      on-profile: "local-db"

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:trollGG?serverTimezone=Asia/Seoul
    username: sa
    password:

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
    show-sql: true
---

spring:
  config:
    activate:
      on-profile: dev

  jpa:
    hibernate:
      ddl-auto: update

server:
  port: 8081

---

spring:
  config:
    activate:
      on-profile: prod

  jpa:
    hibernate:
      ddl-auto: none

server:
  port: 8083




